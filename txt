[기초, 숫자 맞추기 게임 관련]

- flex:1
  --- 기본적으로 root 컨테이너에 다 flex:1 붙이는 거같음.
  --- 이렇게 하면, 자식요소들이 최대한 공간을 크게 차지함.
- FlatList
  --- 배열 같은거 리스트 떙길 때, 사용함
  --- 무한히 많아질 때 유용함.
  --- 화면 스크롤같은거 부드럽게 해주고, 코드 짜는 것도 보조 해줌.
  --- 최적화포함
- ScrollView
  --- 무한히 많은 스크롤 아닐 때
  --- 공간이 명확할 때, 스크롤링 해주는 놈
- 그림자
  --- 안드로이드에서 그림자 주는거는 간단함. elevation 추가
  --- ios에서는 shadow~~~ 로 4개 다 추가해줘야됨.
- useFonts
  --- 폰트 쓰고 싶을 때는 useFonts 쓰면 됨
- icons
  --- 아이콘 쓸 때는 @expo/vector-icons에서 떙겨쓰면 됨.
  --- 어떤 아이콘인지는 공홈가서 보면됨.
- dimension api
  --- 기기 width, height같은거 뽑아낼 떄 사용
  --- 기기 크기 따라서 스타일 짜야할 떄
- 화면 가로 세로 회전
  --- app.json에서 orientation 부분을 만지면 됨. 기존은 잠겨있음.
  --- useWindowDimentions()
  ----- 가로 세로 회전에 따라서, 스타일이 바로바로 바뀌어야되면.
  ----- 이거 써서 width, height를 긁어오는 걸, 컴포넌트 안에다가 선언함. 그 후에 바뀌어야 하는 style을, 배열 뒤쪽에다가 덧씌우기
- 키보드 관련
  --- KeyboardAvoidingView 쓰면 됨. behavior="position" 쓰는 게 제일 좋은듯
  --- 이거 쓰면, 키보드 활성화시킬때 콘텐츠 재조정. 다른 부분 누르면 키보드 다시 꺼지게.
  --- 얘를 쓸 때, 컨텐츠가 밀려서 작아지면, scrollview로 전체를 감싸주면 됨.
  -Platform api
  --- 현재 실행되는 플랫폼을 체크할 수 있음. ios인지 맥인지 안드로이드인지 등등.
  --- 얘는 바뀔 일 없기 때문에 컴포넌트 밖으로 빼도 됨.
  --- 삼항연산자로 해도 이상 무
  --- 내부 프로퍼티로 platform.select({ios:0, android:2}) 이런 식으로 쓸 수 수 있음.
  --- 플랫폼 별로 파일을 분리해도 됨. Title.ios.js / Title.android.js 로 파일명 바꿔놓고, 사용할때는 Title에서 임포트만 하면, react-native에서 알아서 플랫폼 인식해서 맞는 걸로 써줌. 파일명만 바꾸고 나머지는 그대로 Title로 export import 하면 됨.
  - StatusBar
    --- 휴대폰 상태 표시줄 쓰는 거임.
    --- 상태 표시줄 추가해서 표시하고, 개발하는게 좋음.

11강

- navigation.replace
  --- navigate와 똑같은데, 뒤로 가기를 제공하지 않음.
  --- 새 화면으로 교체함.
