[기초, 숫자 맞추기 게임 관련]

- flex:1
  --- 기본적으로 root 컨테이너에 다 flex:1 붙이는 거같음.
  --- 이렇게 하면, 자식요소들이 최대한 공간을 크게 차지함.
- FlatList
  --- 배열 같은거 리스트 떙길 때, 사용함
  --- 무한히 많아질 때 유용함.
  --- 화면 스크롤같은거 부드럽게 해주고, 코드 짜는 것도 보조 해줌.
  --- 최적화포함
- ScrollView
  --- 무한히 많은 스크롤 아닐 때
  --- 공간이 명확할 때, 스크롤링 해주는 놈
- 그림자
  --- 안드로이드에서 그림자 주는거는 간단함. elevation 추가
  --- ios에서는 shadow~~~ 로 4개 다 추가해줘야됨.
- useFonts
  --- 폰트 쓰고 싶을 때는 useFonts 쓰면 됨
- icons
  --- 아이콘 쓸 때는 @expo/vector-icons에서 떙겨쓰면 됨.
  --- 어떤 아이콘인지는 공홈가서 보면됨.
- dimension api
  --- 기기 width, height같은거 뽑아낼 떄 사용
  --- 기기 크기 따라서 스타일 짜야할 떄
- 화면 가로 세로 회전
  --- app.json에서 orientation 부분을 만지면 됨. 기존은 잠겨있음.
  --- useWindowDimentions()
  ----- 가로 세로 회전에 따라서, 스타일이 바로바로 바뀌어야되면.
  ----- 이거 써서 width, height를 긁어오는 걸, 컴포넌트 안에다가 선언함. 그 후에 바뀌어야 하는 style을, 배열 뒤쪽에다가 덧씌우기
- 키보드 관련
  --- KeyboardAvoidingView 쓰면 됨. behavior="position" 쓰는 게 제일 좋은듯
  --- 이거 쓰면, 키보드 활성화시킬때 콘텐츠 재조정. 다른 부분 누르면 키보드 다시 꺼지게.
  --- 얘를 쓸 때, 컨텐츠가 밀려서 작아지면, scrollview로 전체를 감싸주면 됨.
  -Platform api
  --- 현재 실행되는 플랫폼을 체크할 수 있음. ios인지 맥인지 안드로이드인지 등등.
  --- 얘는 바뀔 일 없기 때문에 컴포넌트 밖으로 빼도 됨.
  --- 삼항연산자로 해도 이상 무
  --- 내부 프로퍼티로 platform.select({ios:0, android:2}) 이런 식으로 쓸 수 수 있음.
  --- 플랫폼 별로 파일을 분리해도 됨. Title.ios.js / Title.android.js 로 파일명 바꿔놓고, 사용할때는 Title에서 임포트만 하면, react-native에서 알아서 플랫폼 인식해서 맞는 걸로 써줌. 파일명만 바꾸고 나머지는 그대로 Title로 export import 하면 됨.
  - StatusBar
    --- 휴대폰 상태 표시줄 쓰는 거임.
    --- 상태 표시줄 추가해서 표시하고, 개발하는게 좋음.


8강 실습
- navigation 설정할 때, 먼저 오고 싶은 화면을 위에 두면 됨.
- BottomTabs.Navigator 안에다가 screenOptions 프로퍼티 쓸 때 콜백함수 형태로 받을 수도 있음. 이 때 navigation을 따올 수 있음. 이걸 가지고 헤더에서 화면전환하는 로직 구현가능.
- presentation : modal을 Stack.Screen option에 주면, 아이폰에 모달 아래서 올라오는 효과.
- 라우트 파라미터 받을 때
--- 어떤 페이지에서는 navigation.navigate("ManageExpense", {~~}) 로 파라미터를 주는 반면, 헤더로 누를 때는 파라미터를 줄 수가 없음
--- 파라미터가 있으면 수정모드, 파라미터가 없으면 추가모드로 구현.
- navigation.goback() : 뒤로가기
- 원인이 뭔지 모르겠는데, 에러가 자꾸 뜨면 import문에서 삑났는지 체크

9강
- 키보드 입력받을때, textInputConfig 문법 체크
- autoCorrect는 기본값이 true로 돼있음. 이메일같은거 입력받을때는 꺼줘야함. autoCaptialize는 어디를 자동대문자로 설정해줄지 체크
- config 뭐뭐 있는지는 쓸 때마다 체크하면 될듯. keyboardType은 아무것도 안하면 그 기본 키보드나옴.
- multiline 에 스타일링 주는 거 참고 (Input.js) : 만약 multiline이면 styles 배열에 스타일 추가
- decimal-pad로 입력받아도, 입력값은 무조건 문자열임
- inputChangeHandler(inputIdentifer, enteredValue) 받을때, inputIdentifier 설정해주는 법
--- Input에다가 inputChangeHandler.bind(this, "title") 이렇게 하면 indentifier로 title이 들어감
--- enteredValue는 지 알아서 두번째 매개변수로 잘 들어감.

10강
- 그냥 똑같음. axios api 임
- 마지막 강에서, try catch 에 error state 조절해서 errorOverlay 컴포넌트 띄우는거 정도만 체크